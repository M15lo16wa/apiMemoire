const axios = require('axios');

async function testPatientNotifications() {
  try {
    console.log('üß™ Test de connexion patient et r√©cup√©ration notifications...');
    
    // 1. Connexion du patient
    console.log('\nüîê 1. Connexion du patient...');
    const loginData = {
      numero_assure: 'TEMP000005',
      mot_de_passe: 'passer123'
    };
    
    const loginResponse = await axios.post('http://localhost:3000/api/patient/auth/login', loginData);
    
    console.log('‚úÖ Connexion r√©ussie:');
    console.log('Status:', loginResponse.status);
    console.log('Token:', loginResponse.data.token ? 'Pr√©sent' : 'Absent');
    
    const token = loginResponse.data.token;
    
    if (!token) {
      console.log('‚ùå Pas de token re√ßu');
      return;
    }
    
    const config = {
      headers: {
        'Authorization': `Bearer ${token}`,
        'Content-Type': 'application/json'
      }
    };
    
    // 2. Test de la route notifications
    console.log('\nüîç 2. Test GET /api/patient/dmp/droits-acces/notifications');
    const notificationsResponse = await axios.get('http://localhost:3000/api/patient/dmp/droits-acces/notifications', config);
    
    console.log('‚úÖ Notifications r√©cup√©r√©es:');
    console.log('Status:', notificationsResponse.status);
    console.log('Nombre de notifications:', notificationsResponse.data.data.notifications.length);
    
    // Afficher les d√©tails des notifications
    if (notificationsResponse.data.data.notifications.length > 0) {
      console.log('\nüìã D√©tails des notifications:');
      notificationsResponse.data.data.notifications.forEach((notification, index) => {
        console.log(`\n${index + 1}. Notification ID: ${notification.id_notification}`);
        console.log(`   - Type: ${notification.type_notification}`);
        console.log(`   - Statut: ${notification.statut_envoi}`);
        console.log(`   - Date cr√©ation: ${notification.date_creation}`);
        console.log(`   - Professionnel: ${notification.professionnel?.nom} ${notification.professionnel?.prenom}`);
        console.log(`   - Raison: ${notification.metadata?.raison_acces || 'Non sp√©cifi√©e'}`);
      });
    } else {
      console.log('‚ùå Aucune notification trouv√©e');
    }
    
    // 3. Test avec filtres
    console.log('\nüîç 3. Test avec filtres (demande_validation uniquement)...');
    const filteredResponse = await axios.get('http://localhost:3000/api/patient/dmp/droits-acces/notifications?type_notification=demande_validation&limit=5', config);
    
    console.log('‚úÖ Notifications filtr√©es:');
    console.log('Status:', filteredResponse.status);
    console.log('Nombre de notifications filtr√©es:', filteredResponse.data.data.notifications.length);
    
    // 4. Test de la route droits d'acc√®s
    console.log('\nüîç 4. Test GET /api/patient/dmp/droits-acces');
    const droitsResponse = await axios.get('http://localhost:3000/api/patient/dmp/droits-acces', config);
    
    console.log('‚úÖ Droits d\'acc√®s r√©cup√©r√©s:');
    console.log('Status:', droitsResponse.status);
    console.log('Nombre d\'autorisations:', droitsResponse.data.data.length);
    
    console.log('\n‚úÖ Test termin√© avec succ√®s !');
  } catch (error) {
    console.error('‚ùå Erreur:', error.message);
    if (error.response) {
      console.error('Status:', error.response.status);
      console.error('Data:', error.response.data);
    }
  }
}

testPatientNotifications();
