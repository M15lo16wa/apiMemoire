require('dotenv').config();
const { Sequelize } = require('sequelize');

// Configuration de la base de donn√©es
const sequelize = new Sequelize(
  process.env.DB_NAME,
  process.env.DB_USER,
  process.env.DB_PASSWORD,
  {
    host: process.env.DB_HOST,
    port: process.env.DB_PORT,
    dialect: process.env.DB_DIALECT,
    logging: false
  }
);

async function checkDatabase() {
  try {
    console.log('üîç V√©rification de la base de donn√©es');
    console.log('=====================================\n');

    // V√©rifier la connexion
    await sequelize.authenticate();
    console.log('‚úÖ Connexion √† la base de donn√©es √©tablie\n');

    // V√©rifier les professionnels de sant√©
    const [professionnels] = await sequelize.query(
      'SELECT id_professionnel, numero_adeli, nom, prenom FROM "ProfessionnelsSante" LIMIT 5'
    );
    
    console.log('üë®‚Äç‚öïÔ∏è Professionnels de sant√© trouv√©s:');
    if (professionnels.length > 0) {
      professionnels.forEach(p => {
        console.log(`   ID: ${p.id_professionnel}, Num√©ro ADELI: ${p.numero_adeli}, Nom: ${p.nom} ${p.prenom}`);
      });
    } else {
      console.log('   Aucun professionnel trouv√©');
    }

    // V√©rifier les utilisateurs
    const [utilisateurs] = await sequelize.query(
      'SELECT id_utilisateur, nom, prenom, role FROM "Utilisateurs" LIMIT 5'
    );
    
    console.log('\nüë§ Utilisateurs trouv√©s:');
    if (utilisateurs.length > 0) {
      utilisateurs.forEach(u => {
        console.log(`   ID: ${u.id_utilisateur}, Nom: ${u.nom} ${u.prenom}, R√¥le: ${u.role}`);
      });
    } else {
      console.log('   Aucun utilisateur trouv√©');
    }

    // V√©rifier les prescriptions
    const [prescriptions] = await sequelize.query(
      'SELECT id_prescription, type_prescription, patient_id FROM "Prescriptions" LIMIT 5'
    );
    
    console.log('\nüíä Prescriptions trouv√©es:');
    if (prescriptions.length > 0) {
      prescriptions.forEach(p => {
        console.log(`   ID: ${p.id_prescription}, Type: ${p.type_prescription}, Patient ID: ${p.patient_id}`);
      });
    } else {
      console.log('   Aucune prescription trouv√©e');
    }

    // V√©rifier les patients
    const [patients] = await sequelize.query(
      'SELECT id_patient, nom, prenom FROM "Patients" LIMIT 5'
    );
    
    console.log('\nüè• Patients trouv√©s:');
    if (patients.length > 0) {
      patients.forEach(p => {
        console.log(`   ID: ${p.id_patient}, Nom: ${p.nom} ${p.prenom}`);
      });
    } else {
      console.log('   Aucun patient trouv√©');
    }

  } catch (error) {
    console.error('‚ùå Erreur:', error.message);
  } finally {
    await sequelize.close();
  }
}

checkDatabase();
