const axios = require('axios');
const bcrypt = require('bcryptjs');

const API_BASE_URL = 'http://localhost:3000/api';

// Cr√©er un utilisateur admin directement en base de donn√©es
async function createAdminUser() {
  try {
    console.log('üë§ Cr√©ation d\'un utilisateur admin...');
    
    // Note: Cette approche n√©cessite d'avoir un endpoint pour cr√©er des utilisateurs
    // ou d'utiliser directement la base de donn√©es
    
    const adminData = {
      nom: "Admin",
      prenom: "System",
      email: "admin@hopital.fr",
      mot_de_passe: "admin123",
      role: "admin",
      statut: "actif"
    };

    console.log('‚ö†Ô∏è  Note: Pour cr√©er un utilisateur admin, vous devez soit:');
    console.log('1. Avoir un endpoint /api/utilisateurs qui ne n√©cessite pas d\'authentification');
    console.log('2. Cr√©er directement en base de donn√©es');
    console.log('3. Modifier temporairement la route professionnelSante pour les tests');
    
    return adminData;
  } catch (error) {
    console.error('‚ùå Erreur:', error.message);
    throw error;
  }
}

// Alternative: Modifier temporairement la route pour les tests
function suggestRouteModification() {
  console.log('\nüîß Solution temporaire pour les tests:');
  console.log('Modifiez temporairement la route dans src/modules/professionnelSante/professionnelSante.route.js:');
  console.log('');
  console.log('// Remplacer cette ligne:');
  console.log('.post(authMiddleware.protect, authMiddleware.restrictTo(\'admin\'), professionnelSanteController.createProfessionnel);');
  console.log('');
  console.log('// Par celle-ci (temporairement):');
  console.log('.post(professionnelSanteController.createProfessionnel);');
  console.log('');
  console.log('‚ö†Ô∏è  N\'oubliez pas de remettre la protection apr√®s les tests!');
}

// Test de connexion avec un utilisateur existant
async function testWithExistingUser() {
  try {
    console.log('\nüîç Test avec un utilisateur existant...');
    
    // Essayer de se connecter avec des identifiants par d√©faut
    const loginData = {
      email: "admin@hopital.fr",
      mot_de_passe: "admin123"
    };

    const response = await axios.post(`${API_BASE_URL}/auth/login`, loginData);
    
    console.log('‚úÖ Connexion r√©ussie avec utilisateur existant!');
    return response.data.token;
  } catch (error) {
    console.log('‚ùå Aucun utilisateur admin existant trouv√©');
    return null;
  }
}

// Point d'entr√©e
async function main() {
  console.log('üîß Script de cr√©ation d\'utilisateur admin');
  console.log('==========================================\n');
  
  // Essayer d'abord avec un utilisateur existant
  const token = await testWithExistingUser();
  
  if (token) {
    console.log('‚úÖ Token obtenu:', token.substring(0, 20) + '...');
    console.log('Vous pouvez maintenant utiliser ce token pour cr√©er des professionnels de sant√©');
  } else {
    console.log('‚ùå Aucun utilisateur admin trouv√©');
    suggestRouteModification();
  }
}

if (require.main === module) {
  main();
}

module.exports = {
  createAdminUser,
  testWithExistingUser
}; 