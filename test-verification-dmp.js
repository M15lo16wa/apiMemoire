const { sequelize } = require('./src/models');
const CPSAuthService = require('./src/services/CPSAuthService');
const NotificationService = require('./src/services/NotificationService');

async function testSystemeDMP() {
  console.log('üîç V√©rification du syst√®me DMP...\n');

  try {
    // Test 1: Connexion √† la base de donn√©es
    console.log('üìä Test 1: Connexion √† la base de donn√©es');
    await sequelize.authenticate();
    console.log('‚úÖ Connexion √† la base de donn√©es r√©ussie');

    // Test 2: V√©rification des mod√®les
    console.log('\nüìã Test 2: V√©rification des mod√®les');
    const { SessionAccesDMP, TentativeAuthentificationCPS, NotificationAccesDMP } = require('./src/models');
    console.log('‚úÖ Mod√®les DMP charg√©s avec succ√®s');

    // Test 3: Test CPSAuthService
    console.log('\nüîê Test 3: Test CPSAuthService');
    const cpsData = await CPSAuthService.generateCPSCode(79);
    console.log('‚úÖ G√©n√©ration code CPS r√©ussie:', cpsData.code);

    // Test 4: Test NotificationService
    console.log('\nüìß Test 4: Test NotificationService');
    const notificationService = new NotificationService();
    console.log('‚úÖ NotificationService initialis√©');

    // Test 5: V√©rification des tables
    console.log('\nüóÑÔ∏è Test 5: V√©rification des tables');
    const sessionsCount = await SessionAccesDMP.count();
    const tentativesCount = await TentativeAuthentificationCPS.count();
    const notificationsCount = await NotificationAccesDMP.count();
    
    console.log('‚úÖ Tables DMP accessibles:');
    console.log(`   - SessionsAccesDMP: ${sessionsCount} enregistrements`);
    console.log(`   - TentativesAuthentificationCPS: ${tentativesCount} enregistrements`);
    console.log(`   - NotificationsAccesDMP: ${notificationsCount} enregistrements`);

    console.log('\nüéâ Tous les tests sont pass√©s avec succ√®s !');
    console.log('üöÄ Le syst√®me DMP est pr√™t √† √™tre utilis√©.');

  } catch (error) {
    console.error('‚ùå Erreur lors de la v√©rification:', error.message);
    console.error('Stack:', error.stack);
  } finally {
    await sequelize.close();
  }
}

testSystemeDMP(); 