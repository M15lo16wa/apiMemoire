require('dotenv').config();
const CPSAuthService = require('./src/services/CPSAuthService');

async function testCPSValidation() {
  try {
    console.log('üß™ Test de validation CPS...\n');

    const professionnelId = 79;

    // 1. G√©n√©rer un code CPS valide
    console.log('1Ô∏è‚É£ G√©n√©ration d\'un code CPS valide...');
    const codeValide = await CPSAuthService.generateCPSCode(professionnelId);
    console.log('‚úÖ Code CPS g√©n√©r√©:', codeValide);

    // 2. R√©cup√©rer le secret
    console.log('\n2Ô∏è‚É£ R√©cup√©ration du secret...');
    const secret = await CPSAuthService.getProfessionnelSecret(professionnelId);
    console.log('‚úÖ Secret r√©cup√©r√©:', secret.substring(0, 10) + '...');

    // 3. Valider le code g√©n√©r√©
    console.log('\n3Ô∏è‚É£ Validation du code g√©n√©r√©...');
    const isValid = await CPSAuthService.validateCPSCode(professionnelId, codeValide, secret);
    console.log('‚úÖ Code valide:', isValid);

    // 4. Tester avec un code invalide
    console.log('\n4Ô∏è‚É£ Test avec un code invalide...');
    const isInvalid = await CPSAuthService.validateCPSCode(professionnelId, '1234', secret);
    console.log('‚ùå Code invalide:', isInvalid);

    // 5. Test d'authentification compl√®te
    console.log('\n5Ô∏è‚É£ Test d\'authentification compl√®te...');
    const contexte = {
      adresseIp: '127.0.0.1',
      userAgent: 'Test Script'
    };

    try {
      const resultat = await CPSAuthService.authentifierProfessionnel(professionnelId, codeValide, contexte);
      console.log('‚úÖ Authentification r√©ussie:', resultat);
    } catch (error) {
      console.log('‚ùå Authentification √©chou√©e:', error.message);
    }

    console.log('\nüìã R√©sum√©:');
    console.log('- Code valide g√©n√©r√©:', codeValide);
    console.log('- Utilisez ce code pour tester l\'API');

  } catch (error) {
    console.error('‚ùå Erreur lors du test:', error.message);
  }
}

testCPSValidation(); 