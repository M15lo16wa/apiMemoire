const axios = require('axios');

// Configuration
const BASE_URL = 'http://localhost:3000/api';
const TEST_PATIENT = {
  numero_assure: 'TEMP000005',
  mot_de_passe: 'passer123'
};

console.log('üöÄ Test de connexion patient avec logs d√©taill√©s');
console.log('=' * 60);

async function testPatientLoginWithLogs() {
  try {
    console.log('üîç Tentative de connexion patient...');
    console.log('üì§ Donn√©es envoy√©es:', TEST_PATIENT);
    
    const response = await axios.post(`${BASE_URL}/patient/auth/login`, TEST_PATIENT);
    
    console.log('üì• R√©ponse re√ßue:');
    console.log('  - Status:', response.status);
    console.log('  - Token pr√©sent:', !!response.data.token);
    console.log('  - Token (d√©but):', response.data.token ? response.data.token.substring(0, 30) + '...' : 'Aucun token');
    console.log('  - Patient ID:', response.data.data?.patient?.id_patient);
    
    if (response.data.token) {
      console.log('‚úÖ Connexion r√©ussie avec token');
      
      // D√©coder le token pour voir sa structure
      const token = response.data.token;
      const tokenParts = token.split('.');
      if (tokenParts.length === 3) {
        try {
          const payload = JSON.parse(Buffer.from(tokenParts[1], 'base64').toString());
          console.log('üîç Structure du token d√©cod√©:');
          console.log('  - ID:', payload.id);
          console.log('  - Role:', payload.role);
          console.log('  - Type:', payload.type);
          console.log('  - IAT:', payload.iat);
          console.log('  - EXP:', payload.exp);
        } catch (e) {
          console.log('‚ùå Impossible de d√©coder le payload du token');
        }
      }
      
      // Test d'acc√®s √† une route prot√©g√©e
      console.log('\nüîç Test d\'acc√®s √† une route prot√©g√©e...');
      
      const headers = {
        'Authorization': `Bearer ${token}`,
        'Content-Type': 'application/json'
      };
      
      try {
        const accessResponse = await axios.get(`${BASE_URL}/dossierMedical/patient/${response.data.data.patient.id_patient}/complet`, { headers });
        console.log('‚úÖ Acc√®s r√©ussi:', accessResponse.status);
      } catch (accessError) {
        if (accessError.response) {
          console.log('‚ùå Acc√®s √©chou√©:', accessError.response.status, accessError.response.data.message || accessError.response.statusText);
        } else {
          console.log('‚ùå Erreur d\'acc√®s:', accessError.message);
        }
      }
    } else {
      console.log('‚ùå Connexion √©chou√©e: aucun token re√ßu');
    }
    
  } catch (error) {
    console.log('‚ùå Erreur de connexion:');
    if (error.response) {
      console.log('  - Status:', error.response.status);
      console.log('  - Message:', error.response.data.message || error.response.statusText);
      console.log('  - Donn√©es:', error.response.data);
    } else {
      console.log('  - Message:', error.message);
    }
  }
}

// Ex√©cuter le test
testPatientLoginWithLogs().catch(console.error);
